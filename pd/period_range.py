import random
from datetime import timezone, timedelta, datetime

import pandas as pd

# Asia/Tokyo
tokyo = timezone(timedelta(hours=9), 'Asia/Tokyo')
# 2023-05-21 16:46:01.018817+09:00
now = datetime.now(tokyo)
# 2023-05-20
one_day_ago = (now - timedelta(days=1)).date()
# 2023-04-20
thirty_days_ago = one_day_ago - pd.to_timedelta("30days")

"""
PeriodIndex(['2023-04-20', '2023-04-21', '2023-04-22', '2023-04-23',
             '2023-04-24', '2023-04-25', '2023-04-26', '2023-04-27',
             '2023-04-28', '2023-04-29', '2023-04-30', '2023-05-01',
             '2023-05-02', '2023-05-03', '2023-05-04', '2023-05-05',
             '2023-05-06', '2023-05-07', '2023-05-08', '2023-05-09',
             '2023-05-10', '2023-05-11', '2023-05-12', '2023-05-13',
             '2023-05-14', '2023-05-15', '2023-05-16', '2023-05-17',
             '2023-05-18', '2023-05-19', '2023-05-20'],
            dtype='period[D]')
"""
period_range = pd.period_range(start=thirty_days_ago, end=one_day_ago, freq='D')

# https://pandas.pydata.org/docs/reference/api/pandas.Period.html
# {'2023-04-20': '23.57', '2023-04-21': '85.01', '2023-04-22': '53.07', '2023-04-23': '84.37', '2023-04-24': '23.05', '2023-04-25': '60.81', '2023-04-26': '87.49', '2023-04-27': '93.05', '2023-04-28': '81.95', '2023-04-29': '64.37', '2023-04-30': '56.41', '2023-05-01': '6.78', '2023-05-02': '22.34', '2023-05-03': '67.44', '2023-05-04': '80.77', '2023-05-05': '64.51', '2023-05-06': '40.04', '2023-05-07': '83.06', '2023-05-08': '29.94', '2023-05-09': '75.09', '2023-05-10': '68.68', '2023-05-11': '44.11', '2023-05-12': '76.44', '2023-05-13': '8.69', '2023-05-14': '50.29', '2023-05-15': '23.94', '2023-05-16': '48.94', '2023-05-17': '15.72', '2023-05-18': '84.58', '2023-05-19': '95.94', '2023-05-20': '27.37'}
number_per_days = {period.strftime('%Y-%m-%d'): f"{random.uniform(0.0, 100.0):.2f}" for period in period_range}

"""
             Day  Value
2023-04-20     1  23.57
2023-04-21     2  85.01
2023-04-22     3  53.07
2023-04-23     4  84.37
2023-04-24     5  23.05
2023-04-25     6  60.81
2023-04-26     7  87.49
2023-04-27     8  93.05
2023-04-28     9  81.95
2023-04-29    10  64.37
2023-04-30    11  56.41
2023-05-01    12   6.78
2023-05-02    13  22.34
2023-05-03    14  67.44
2023-05-04    15  80.77
2023-05-05    16  64.51
2023-05-06    17  40.04
2023-05-07    18  83.06
2023-05-08    19  29.94
2023-05-09    20  75.09
2023-05-10    21  68.68
2023-05-11    22  44.11
2023-05-12    23  76.44
2023-05-13    24   8.69
2023-05-14    25  50.29
2023-05-15    26  23.94
2023-05-16    27  48.94
2023-05-17    28  15.72
2023-05-18    29  84.58
2023-05-19    30  95.94
2023-05-20    31  27.37
"""
df = pd.DataFrame({
    "Day": [i for i in range(1, len(period_range) + 1)],
    "Value": [number_per_days[str(p)] for p in period_range]
}, index=period_range)

"""
2023-04-20    54.75
2023-04-21    76.31
2023-04-22    69.80
2023-04-23    72.60
2023-04-24    19.90
2023-04-25    27.44
2023-04-26    62.77
2023-04-27    64.89
2023-04-28    93.05
2023-04-29    64.40
2023-04-30    33.73
2023-05-01    82.44
2023-05-02    62.78
2023-05-03    18.46
2023-05-04    80.57
2023-05-05    20.39
2023-05-06    46.48
2023-05-07     0.09
2023-05-08    56.82
2023-05-09    29.62
2023-05-10    22.40
2023-05-11    48.44
2023-05-12    43.00
2023-05-13    29.92
2023-05-14    39.35
2023-05-15    29.93
2023-05-16    36.99
2023-05-17    90.69
2023-05-18     6.17
2023-05-19    73.62
2023-05-20    49.47
Freq: D, Name: Value, dtype: object
"""

# 90.69
df["Value"].max()
# 0.09
df["Value"].min()

"""
count        31
unique       31
top       90.69
freq          1
Name: Value, dtype: object
"""
df["Value"].describe()

"""
             Day
count  31.000000
mean   16.000000
std     9.092121
min     1.000000
25%     8.500000
50%    16.000000
75%    23.500000
max    31.000000
"""
df.describe()
